{"ast":null,"code":"var _jsxFileName = \"/Users/kavyashreechandrashekar/Desktop/CMPE-273/Lab2/UI/grubhub/src/components/User/AddressAndPhone.js\";\nimport React, { Component } from \"react\";\nimport Navigation from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../js/actions/index\";\nimport { Row, Col, Container, Button, Toast } from \"react-bootstrap\";\nimport \"../../css/sidebar.css\";\nimport Form from \"react-bootstrap/Form\";\nimport cookie from \"react-cookies\";\n\nclass AddressAndPhone extends Component {\n  constructor(props) {\n    super();\n\n    this.handleAddressEdit = event => {\n      this.setState({\n        isAddressEditable: true\n      });\n    };\n\n    this.handlePhoneNoEdit = event => {\n      this.setState({\n        isPhoneEditable: true\n      });\n    };\n\n    this.handleAddressCancel = event => {\n      this.setState({\n        isAddressEditable: false\n      });\n    };\n\n    this.handlePhoneNoCancel = event => {\n      this.setState({\n        isPhoneEditable: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.validateAddress = () => {\n      this.setState({\n        addressError: \"\"\n      });\n\n      if (this.state.address === \"\") {\n        this.setState({\n          addressError: \"*Required\"\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.updateAddress = () => {\n      if (this.validateAddress()) {\n        let data = {\n          email: localStorage.getItem(\"email\"),\n          address: this.state.address\n        };\n        this.props.updateUserAddress(data);\n        this.setState({\n          isAddressEditable: false\n        });\n      }\n    };\n\n    this.validatePhoneNo = () => {\n      this.setState({\n        phoneNoError: \"\"\n      });\n\n      if (this.state.phoneNo === \"\") {\n        this.setState({\n          phoneNoError: \"*Required\"\n        });\n        return false;\n      } else if (!/^\\d+$/.test(this.state.phoneNo) || this.state.phoneNo.length !== 10) {\n        this.setState({\n          phoneNoError: \"Invalid Phone Number\"\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.updatePhoneNo = () => {\n      if (this.validatePhoneNo()) {\n        let data = {\n          email: localStorage.getItem(\"email\"),\n          phoneNo: this.state.phoneNo\n        };\n        this.props.updateUserPhoneNo(data);\n        this.setState({\n          isPhoneEditable: false\n        });\n      }\n    };\n\n    this.state = {\n      isAddressEditable: false,\n      isPhoneEditable: false,\n      address: \"\",\n      addressError: \"\",\n      phoneNo: \"\",\n      phoneNoError: \"\",\n      isUpdated: false\n    };\n  }\n\n  componentWillMount() {\n    if (!localStorage.getItem(\"jwtToken\")) {\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"password\");\n      this.props.history.push(\"/SignIn\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const newProfile = nextProps.address;\n    const newPhoneNo = nextProps.phone;\n    console.log(\"here\");\n    console.log(newProfile);\n\n    if (newProfile !== this.props.address && newProfile === \"Successfully Updated\") {\n      console.log(\"updated\");\n      this.props.getUserProfile(localStorage.getItem(\"email\"));\n      this.setState({\n        isUpdated: true\n      });\n    }\n\n    if (newPhoneNo !== this.props.phone && newPhoneNo === \"Successfully Updated\") {\n      console.log(\"updated\");\n      this.props.getUserProfile(localStorage.getItem(\"email\"));\n      this.setState({\n        isUpdated: true\n      });\n    }\n  }\n\n  render() {\n    let AddressEdit = null;\n\n    if (this.state.isAddressEditable) {\n      AddressEdit = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Edit Address\"), React.createElement(Form, {\n        className: \"col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Form.Control, {\n        name: \"address\",\n        onChange: this.handleChange,\n        as: \"textarea\",\n        defaultValue: this.props.profile.address || \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.state.addressError)), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.updateAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Update Address\"), React.createElement(Button, {\n        variant: \"outline-secondary\",\n        onClick: this.handleAddressCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    } else {\n      AddressEdit = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Address\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.props.profile.address || \"\", React.createElement(\"div\", {\n        class: \"float-right\",\n        role: \"button\",\n        style: {\n          color: \"blue\"\n        },\n        onClick: this.handleAddressEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Edit\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }\n\n    let phoneNoEdit = null;\n\n    if (this.state.isPhoneEditable) {\n      phoneNoEdit = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Edit Phone number\"), React.createElement(Form, {\n        className: \"col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Phone Number\"), React.createElement(Form.Control, {\n        onChange: this.handleChange,\n        name: \"phoneNo\",\n        defaultValue: this.props.profile.phoneNo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.state.phoneNoError)), React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.updatePhoneNo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Update PhoneNo\"), React.createElement(Button, {\n        variant: \"outline-secondary\",\n        onClick: this.handlePhoneNoCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }));\n    } else {\n      phoneNoEdit = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"pt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Phone Number\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, this.props.profile.phoneNo || \"\", React.createElement(\"div\", {\n        class: \"float-right\",\n        role: \"button\",\n        style: {\n          color: \"blue\"\n        },\n        onClick: this.handlePhoneNoEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Edit\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"vertical-menu bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/user/AddressAndPhone\",\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Your Account\")), React.createElement(\"a\", {\n      href: \"/UserHome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"a\", {\n      href: \"/user/UpcomingOrders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Upcoming orders\"), React.createElement(\"a\", {\n      href: \"/Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Profile\"), React.createElement(\"a\", {\n      href: \"/user/AddressAndPhone\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Address and phone\"), React.createElement(\"a\", {\n      href: \"/user/PastOrders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Past orders\"))), React.createElement(Col, {\n      className: \"col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Your Address and Phone number\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Toast, {\n      style: {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        backgroundColor: \"#4ede74\"\n      },\n      onClose: () => this.setState({\n        isUpdated: false\n      }),\n      show: this.state.isUpdated,\n      delay: 3000,\n      autohide: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Toast.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Successfully Updated!\")))), AddressEdit, phoneNoEdit)))));\n  }\n\n}\n\nfunction mapStoreToProps(state) {\n  return {\n    profile: state.userDetails.userProfile,\n    address: state.userDetails.addressUpdate,\n    phone: state.userDetails.phoneNoUpdate\n  };\n}\n\nexport default connect(mapStoreToProps, actionCreators)(AddressAndPhone);","map":{"version":3,"sources":["/Users/kavyashreechandrashekar/Desktop/CMPE-273/Lab2/UI/grubhub/src/components/User/AddressAndPhone.js"],"names":["React","Component","Navigation","connect","actionCreators","Row","Col","Container","Button","Toast","Form","cookie","AddressAndPhone","constructor","props","handleAddressEdit","event","setState","isAddressEditable","handlePhoneNoEdit","isPhoneEditable","handleAddressCancel","handlePhoneNoCancel","handleChange","target","name","value","validateAddress","addressError","state","address","updateAddress","data","email","localStorage","getItem","updateUserAddress","validatePhoneNo","phoneNoError","phoneNo","test","length","updatePhoneNo","updateUserPhoneNo","isUpdated","componentWillMount","removeItem","history","push","componentWillReceiveProps","nextProps","newProfile","newPhoneNo","phone","console","log","getUserProfile","render","AddressEdit","profile","fontSize","color","phoneNoEdit","position","top","right","backgroundColor","mapStoreToProps","userDetails","userProfile","addressUpdate","phoneNoUpdate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navigation from \"../Navbar\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../js/actions/index\";\nimport { Row, Col, Container, Button, Toast } from \"react-bootstrap\";\nimport \"../../css/sidebar.css\";\nimport Form from \"react-bootstrap/Form\";\nimport cookie from \"react-cookies\";\n\nclass AddressAndPhone extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isAddressEditable: false,\n      isPhoneEditable: false,\n      address: \"\",\n      addressError: \"\",\n      phoneNo: \"\",\n      phoneNoError: \"\",\n      isUpdated: false\n    };\n  }\n  componentWillMount() {\n    if (!localStorage.getItem(\"jwtToken\")) {\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"password\");\n      this.props.history.push(\"/SignIn\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    const newProfile = nextProps.address;\n    const newPhoneNo = nextProps.phone;\n    console.log(\"here\");\n    console.log(newProfile);\n    if (\n      newProfile !== this.props.address &&\n      newProfile === \"Successfully Updated\"\n    ) {\n      console.log(\"updated\");\n      this.props.getUserProfile(localStorage.getItem(\"email\"));\n      this.setState({\n        isUpdated: true\n      });\n    }\n    if (\n      newPhoneNo !== this.props.phone &&\n      newPhoneNo === \"Successfully Updated\"\n    ) {\n      console.log(\"updated\");\n      this.props.getUserProfile(localStorage.getItem(\"email\"));\n      this.setState({\n        isUpdated: true\n      });\n    }\n  }\n  handleAddressEdit = event => {\n    this.setState({ isAddressEditable: true });\n  };\n  handlePhoneNoEdit = event => {\n    this.setState({ isPhoneEditable: true });\n  };\n  handleAddressCancel = event => {\n    this.setState({ isAddressEditable: false });\n  };\n  handlePhoneNoCancel = event => {\n    this.setState({ isPhoneEditable: false });\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  validateAddress = () => {\n    this.setState({\n      addressError: \"\"\n    });\n    if (this.state.address === \"\") {\n      this.setState({\n        addressError: \"*Required\"\n      });\n      return false;\n    }\n    return true;\n  };\n  updateAddress = () => {\n    if (this.validateAddress()) {\n      let data = {\n        email: localStorage.getItem(\"email\"),\n        address: this.state.address\n      };\n      this.props.updateUserAddress(data);\n      this.setState({\n        isAddressEditable: false\n      });\n    }\n  };\n\n  validatePhoneNo = () => {\n    this.setState({\n      phoneNoError: \"\"\n    });\n\n    if (this.state.phoneNo === \"\") {\n      this.setState({\n        phoneNoError: \"*Required\"\n      });\n      return false;\n    } else if (\n      !/^\\d+$/.test(this.state.phoneNo) ||\n      this.state.phoneNo.length !== 10\n    ) {\n      this.setState({\n        phoneNoError: \"Invalid Phone Number\"\n      });\n      return false;\n    }\n    return true;\n  };\n\n  updatePhoneNo = () => {\n    if (this.validatePhoneNo()) {\n      let data = {\n        email: localStorage.getItem(\"email\"),\n        phoneNo: this.state.phoneNo\n      };\n      this.props.updateUserPhoneNo(data);\n      this.setState({\n        isPhoneEditable: false\n      });\n    }\n  };\n  render() {\n    let AddressEdit = null;\n    if (this.state.isAddressEditable) {\n      AddressEdit = (\n        <div>\n          <h3>Edit Address</h3>\n          <Form className=\"col-sm-5\">\n            <Form.Group>\n              <Form.Label>Address</Form.Label>\n              <Form.Control\n                name=\"address\"\n                onChange={this.handleChange}\n                as=\"textarea\"\n                defaultValue={this.props.profile.address || \"\"}\n              ></Form.Control>\n              <div style={{ fontSize: 12, color: \"red\" }}>\n                {this.state.addressError}\n              </div>\n            </Form.Group>\n            <Form.Group>\n              <Button onClick={this.updateAddress}>Update Address</Button>\n              <Button\n                variant=\"outline-secondary\"\n                onClick={this.handleAddressCancel}\n              >\n                Cancel\n              </Button>\n            </Form.Group>\n          </Form>\n          <hr></hr>\n        </div>\n      );\n    } else {\n      AddressEdit = (\n        <div>\n          <label className=\"pt-2\">\n            <b>Address</b>\n          </label>\n          <div>\n            {this.props.profile.address || \"\"}\n            <div\n              class=\"float-right\"\n              role=\"button\"\n              style={{ color: \"blue\" }}\n              onClick={this.handleAddressEdit}\n            >\n              Edit\n            </div>\n          </div>\n          <hr></hr>\n        </div>\n      );\n    }\n    let phoneNoEdit = null;\n    if (this.state.isPhoneEditable) {\n      phoneNoEdit = (\n        <div>\n          <h3>Edit Phone number</h3>\n          <Form className=\"col-sm-5\">\n            <Form.Group>\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                onChange={this.handleChange}\n                name=\"phoneNo\"\n                defaultValue={this.props.profile.phoneNo}\n              ></Form.Control>\n              <div style={{ fontSize: 12, color: \"red\" }}>\n                {this.state.phoneNoError}\n              </div>\n            </Form.Group>\n            <Form.Group>\n              <Button onClick={this.updatePhoneNo}>Update PhoneNo</Button>\n              <Button\n                variant=\"outline-secondary\"\n                onClick={this.handlePhoneNoCancel}\n              >\n                Cancel\n              </Button>\n            </Form.Group>\n          </Form>\n          <hr></hr>\n        </div>\n      );\n    } else {\n      phoneNoEdit = (\n        <div>\n          <label className=\"pt-2\">\n            <b>Phone Number</b>\n          </label>\n          <div>\n            {this.props.profile.phoneNo || \"\"}\n            <div\n              class=\"float-right\"\n              role=\"button\"\n              style={{ color: \"blue\" }}\n              onClick={this.handlePhoneNoEdit}\n            >\n              Edit\n            </div>\n          </div>\n          <hr></hr>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Navigation></Navigation>\n        <div>\n          <Row>\n            <Col className=\"col-sm-3\">\n              <div className=\"vertical-menu bg-light\">\n                <a href=\"/user/AddressAndPhone\" className=\"header\">\n                  <h2>Your Account</h2>\n                </a>\n                <a href=\"/UserHome\">Home</a>\n                <a href=\"/user/UpcomingOrders\">Upcoming orders</a>\n                <a href=\"/Profile\">Profile</a>\n                <a href=\"/user/AddressAndPhone\" className=\"active\">\n                  Address and phone\n                </a>\n                <a href=\"/user/PastOrders\">Past orders</a>\n              </div>\n            </Col>\n            <Col className=\"col-sm-9\">\n              <Container>\n                <h3 className=\"pt-5\">Your Address and Phone number</h3>\n                <Row>\n                  <Col>\n                    <Toast\n                      style={{\n                        position: \"absolute\",\n                        top: 0,\n                        right: 0,\n                        backgroundColor: \"#4ede74\"\n                      }}\n                      onClose={() => this.setState({ isUpdated: false })}\n                      show={this.state.isUpdated}\n                      delay={3000}\n                      autohide\n                    >\n                      <Toast.Body>Successfully Updated!</Toast.Body>\n                    </Toast>\n                  </Col>\n                </Row>\n                {AddressEdit}\n                {phoneNoEdit}\n              </Container>\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStoreToProps(state) {\n  return {\n    profile: state.userDetails.userProfile,\n    address: state.userDetails.addressUpdate,\n    phone: state.userDetails.phoneNoUpdate\n  };\n}\nexport default connect(\n  mapStoreToProps,\n  actionCreators\n)(AddressAndPhone);\n"]},"metadata":{},"sourceType":"module"}